{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","console","log","id","className","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","SignIn","email","password","handleSubmit","event","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","onChange","htmlFor","creds","credentials","signInWithEmailAndPassword","catch","err","message","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorID","add","authorId","Date","CreateProject","history","push","App","path","exact","component","ProjectDetails","Boolean","window","location","hostname","initState","authRecucer","action","projectReducer","rootReducer","combineReducers","autReducer","firestoreReducer","firebaseReducer","process","REACT_APP_FIREBASE_KEY","REACT_APP_FIREBASE_AUTHURL","REACT_APP_FIREBASE_DATABASEURL","REACT_APP_FIREBASE_PROJECTID","REACT_APP_STORAGEBUCKET","REACT_APP_MESSAGINGSENDERID","REACT_APP_APPID","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mRAuBeA,cAAQ,MALI,SAACC,GACxB,MAAO,CACHC,QAAS,kBAAMD,GCFd,SAACA,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAIzBC,OACAH,UACAI,MAAK,WACJL,EAAS,CAAEM,KAAM,8BDFVP,EAlBO,SAACQ,GAEnB,OADAC,QAAQC,IAAI,uBAAyBF,GAEjC,oCACI,wBAAIG,GAAG,aAAaC,UAAU,8BAE1B,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBACJ,gCAAK,uBAAGC,KAAK,IAAIC,QAASP,EAAMN,SAA3B,WACL,4BAAI,kBAAC,IAAD,CAASW,GAAG,IAAID,UAAU,mCAAmCJ,EAAMQ,QAAQC,gBEChFC,EAXQ,WACnB,OACI,oCACI,wBAAIP,GAAG,aAAaC,UAAU,8BAC1B,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,cC4BLb,eAVS,SAAAmB,GAEtB,OADAV,QAAQC,IAAIS,GACL,CACLd,KAAMc,EAAMC,SAASf,KACrBW,QAASG,EAAMC,SAASJ,WAID,GAEZhB,EA9BA,SAAAQ,GAAU,IACfH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QACRK,EAAQhB,EAAKiB,IACjB,kBAAC,EAAD,CAAeN,QAASA,IAExB,kBAAC,EAAD,MAEF,OACE,oCACE,yBAAKJ,UAAU,6BACb,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cACpBI,EAAQC,SAAR,UAAsBD,EAAQC,SAA9B,WAAmD,eAErDI,Q,iBCSIE,EA1BO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACvB,OACE,yBAAKZ,UAAU,WACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,eAChB,wBAAIA,UAAU,iBACXY,GACCA,EAAcC,KAAI,SAAAC,GAChB,OACE,wBAAIC,IAAKD,EAAKf,IACZ,0BAAMC,UAAU,aAAac,EAAKE,KAAM,KACxC,8BAAO,IAAKF,EAAKG,QAAS,KAC1B,yBAAKjB,UAAU,uBACbkB,IAAOJ,EAAKK,KAAKC,UAAUC,oBCIlCC,EAlBQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OAAIA,EAEA,yBAAKvB,UAAU,kCACb,yBAAKA,UAAU,mCACb,0BAAMA,UAAU,cAAcuB,EAAQC,OACtC,wCACaD,EAAQE,gBADrB,IACuCF,EAAQG,gBAE/C,uBAAG1B,UAAU,aAAakB,IAAOK,EAAQI,UAAUP,SAASQ,YAAYC,cAKvE,oDCKIC,EAlBK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACI,yBAAK/B,UAAU,wBAEb+B,GACAA,EAASlB,KAAI,SAAAU,GACV,OACG,kBAAC,IAAD,CAAMtB,GAAE,mBAAcsB,EAAQxB,KAC7B,kBAAC,EAAD,CAAgBwB,QAASA,EAASR,IAAKQ,EAAQxB,W,gBCJ1DiC,E,2MACJzB,MAAQ,G,wEACE,IAAD,EACmC0B,KAAKrC,MAAvCmC,EADD,EACCA,SAAUtC,EADX,EACWA,KAAMmB,EADjB,EACiBA,cACxB,OAAKnB,EAAKiB,IAER,yBAAKV,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAa+B,SAAUA,KAEzB,yBAAK/B,UAAU,yBACb,kBAAC,EAAD,CAAeY,cAAeA,OARhB,kBAAC,IAAD,CAAUX,GAAG,gB,GAJfiC,aA4BTC,cACb/C,aATsB,SAAAmB,GAEtB,OADAV,QAAQC,IAAI,yBAA0BS,EAAM6B,WACrC,CACLL,SAAUxB,EAAM6B,UAAUC,QAAQN,SAClCtC,KAAMc,EAAMC,SAASf,KACrBmB,cAAeL,EAAM6B,UAAUC,QAAQzB,kBAKzC0B,2BAAiB,CACf,CAAEC,WAAY,YACd,CAAEA,WAAY,gBAAiBC,MAAO,EAAIC,QAAQ,CAAC,OAAQ,WAJhDN,CAMbH,GCRaG,cACX/C,aAXoB,SAACmB,EAAOmC,GAC5B,IAAM3C,EAAK2C,EAASC,MAAMC,OAAO7C,GAC3BgC,EAAWxB,EAAM6B,UAAUS,KAAKd,SAEtC,MAAO,CACHR,QAFYQ,EAAWA,EAAShC,GAAM,SAS1CuC,2BAAiB,CACb,CAAEC,WAAY,cAHPJ,EA3BQ,SAAC,GAAe,IAAdZ,EAAa,EAAbA,QAErB,OACI,yBAAKvB,UAAU,qCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,iBAA4CuB,EAAQC,OACpD,2BAAID,EAAQN,UAEhB,yBAAKjB,UAAU,wCACX,0CAAgBuB,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClD,6BAAMR,IAAOK,EAAQI,UAAUP,SAASQ,YAAYC,kB,QCdlEiB,E,2MACJvC,MAAQ,CACNwC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAAAC,GACbA,EAAMC,iBACN,EAAKvD,MAAMwD,OAAO,EAAK7C,Q,EAEzB8C,aAAe,SAAAH,GACb,EAAKI,SAAL,eACGJ,EAAMK,OAAOxD,GAAKmD,EAAMK,OAAOC,S,wEAG1B,IACAC,EAAcxB,KAAKrC,MAAnB6D,UACR,OACE,yBAAKzD,UAAU,aACb,yBAAKA,UAAU,OACb,0BAAMA,UAAU,iBAAiB0D,SAAUzB,KAAKgB,cAC9C,wBAAIjD,UAAU,2BAAd,WACA,yBAAKA,UAAU,uBACb,2BACEL,KAAK,QACLI,GAAG,QACH4D,SAAU1B,KAAKoB,aACfrD,UAAU,aAEZ,2BAAO4D,QAAQ,SAAf,UAEF,yBAAK5D,UAAU,uBACb,2BACEL,KAAK,WACLI,GAAG,WACH4D,SAAU1B,KAAKoB,aACfrD,UAAU,aAEZ,2BAAO4D,QAAQ,YAAf,aAEF,yBAAK5D,UAAU,uBACb,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBACZyD,EAAY,2BAAIA,GAAiB,c,GA3C7BvB,aAgEN9C,eAZS,SAAAmB,GACtB,MAAO,CACLkD,UAAWlD,EAAMd,KAAKgE,cAIC,SAAApE,GACzB,MAAO,CACL+D,OAAQ,SAAAS,GAAK,OAAIxE,GRhECyE,EQgEeD,ER/D5B,SAACxE,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAIzBC,OACAsE,2BAA2BD,EAAYf,MAAOe,EAAYd,UAC1DtD,MAAK,WACJL,EAAS,CAAEM,KAAM,qBAElBqE,OAAM,SAAAC,GAAQ,IACLC,EAAYD,EAAZC,QACR7E,EAAS,CAAEM,KAAM,cAAeuE,kBAZlB,IAAAJ,MQoEP1E,CAA6C0D,GC/DtDqB,E,2MACF5D,MAAQ,CACJwC,MAAO,GACPC,SAAU,GACVoB,UAAW,GACXC,SAAU,I,EAGdpB,aAAe,SAACC,GACZA,EAAMC,iBACNtD,QAAQC,IAAI,EAAKS,OACjB,EAAKX,MAAM0E,OAAO,EAAK/D,Q,EAE3B8C,aAAe,SAACH,GACZ,EAAKI,SAAL,eACKJ,EAAMK,OAAOxD,GAAKmD,EAAMK,OAAOC,S,wEAIpC,OACI,yBAAKxD,UAAU,aACX,yBAAKA,UAAU,OACX,0BAAMA,UAAU,iBAAiB0D,SAAUzB,KAAKgB,cAC5C,wBAAIjD,UAAU,2BAAd,WACA,yBAAKA,UAAU,uBACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAOjE,KAAK,QAAQI,GAAG,QAAQ4D,SAAU1B,KAAKoB,aAAcrD,UAAU,cAE1E,yBAAKA,UAAU,uBACX,2BAAO4D,QAAQ,YAAf,YACA,2BAAOjE,KAAK,WAAWI,GAAG,WAAW4D,SAAU1B,KAAKoB,aAAcrD,UAAU,cAEhF,yBAAKA,UAAU,mCACX,2BAAO4D,QAAQ,aAAf,cACA,2BAAOjE,KAAK,OAAOI,GAAG,YAAY4D,SAAU1B,KAAKoB,aAAcrD,UAAU,cAE7E,yBAAKA,UAAU,mCACX,2BAAO4D,QAAQ,YAAf,aACA,2BAAOjE,KAAK,OAAOI,GAAG,WAAW4D,SAAU1B,KAAKoB,aAAcrD,UAAU,cAE5E,yBAAKA,UAAU,uBACX,4BAAQA,UAAU,gCAAlB,iB,GAzCPkC,aA2DN9C,eAVS,SAACmB,GACrB,MAAO,CACHkD,UAAWlD,EAAMd,KAAKgE,cAGF,SAACpE,GACzB,MAAO,CACHiF,OAAQ,SAACC,GAAD,OAAalF,ET/BP,SAAAkF,GACpB,OAAO,SAAClF,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAagF,EAAmB,EAAnBA,aACnChE,EAAWhB,IACX4C,EAAYoC,IAGlBhE,EACGf,OACAgF,+BAA+BF,EAAQxB,MAAOwB,EAAQvB,UACtDtD,MAAK,SAAAgF,GACJ,OAAOtC,EACJG,WAAW,SACXoC,IAAID,EAAK1D,KAAKN,KACdkE,IAAI,CACHR,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClBhE,SAAUkE,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAGvD3E,MAAK,WACJL,EAAS,CAAEM,KAAM,sBAElBqE,OAAM,SAAAC,GACLpE,QAAQC,IAAImE,EAAIC,SADJ,IAEJA,EAAYD,EAAZC,QACR7E,EAAS,CAAEM,KAAM,eAAgBuE,gBSMHI,CAAOC,QAG9BnF,CAA6C+E,G,8NC9DrD,IAAMU,EAAgB,SAACtD,GAC1B,OAAO,SAAClC,EAAUE,EAAX,GAAqD,EAA/BC,YAAgC,IAErD4C,GAAYoC,EAFwC,EAAlBA,gBAGlCpE,EAAUb,IAAWiB,SAASJ,QAC9B0E,EAAWvF,IAAWiB,SAASf,KAAKiB,IAE1C0B,EAAUG,WAAW,YAAYwC,I,yWAAjC,IACKxD,EADL,CAEEE,gBAAiBrB,EAAQgE,UACzB1C,eAAgBtB,EAAQiE,SACxBW,SAAUF,EACVnD,UAAW,IAAIsD,QACdvF,MAAK,WACNL,EAAS,CAAEM,KAAM,8BAChBqE,OAAM,SAAAC,GACP5E,EAAS,CAAEM,KAAM,wBAA0BsE,QCd7CiB,E,2MACJ3E,MAAQ,CACNiB,MAAO,GACPP,QAAS,I,EAGXgC,aAAe,SAAAC,GACbA,EAAMC,iBACN,EAAKvD,MAAMiF,cAAc,EAAKtE,OAC9B,EAAKX,MAAMuF,QAAQC,KAAK,M,EAE1B/B,aAAe,SAAAH,GACb,EAAKI,SAAL,eACGJ,EAAMK,OAAOxD,GAAKmD,EAAMK,OAAOC,S,wEAIlC,OACE,yBAAKxD,UAAU,aACb,0BAAMA,UAAU,QAAQ0D,SAAUzB,KAAKgB,cACrC,wBAAIjD,UAAU,2BAAd,wBACA,yBAAKA,UAAU,eACb,2BAAOL,KAAK,OAAOI,GAAG,QAAQ4D,SAAU1B,KAAKoB,eAC7C,2BAAOO,QAAQ,SAAf,kBAEF,yBAAK5D,UAAU,eACb,8BACED,GAAG,UACHC,UAAU,uBACV2D,SAAU1B,KAAKoB,eAEjB,2BAAOO,QAAQ,WAAf,oBAEF,yBAAK5D,UAAU,eACb,4BAAQA,UAAU,sBAAlB,iB,GAlCgBkC,aA+Cb9C,cAAQ,MALI,SAAAC,GACzB,MAAO,CACLwF,cAAe,SAAAtD,GAAO,OAAIlC,EAASwF,EAActD,QAGtCnC,CAAkC8F,GCdlCG,E,2MA1Bb9E,MAAQ,G,wEAIN,OACE,kBAAC,IAAD,KACE,yBAAKP,UAAU,OACf,kBAAC,EAAD,MACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOsF,KAAK,IAAIC,OAAK,EAACC,UAAWxD,IACjC,kBAAC,IAAD,CAAOsD,KAAK,eAAgBE,UAAWC,IACvC,kBAAC,IAAD,CAAOH,KAAK,UAAUC,OAAK,EAACC,UAAW1C,IACvC,kBAAC,IAAD,CAAOwC,KAAK,UAAUC,OAAK,EAACC,UAAWrB,IACvC,kBAAC,IAAD,CAAOmB,KAAK,UAAUC,OAAK,EAACC,UAAWN,W,GAd9BhD,aCEEwD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlD,MACvB,2D,ykBClBN,IAAMmD,EAAY,GAqCHC,EApCK,WAAgC,IAA/BxF,EAA8B,uDAAtBuF,EAAWE,EAAW,uCACjD,OAAQA,EAAOrG,MACb,IAAK,cAEH,OADAE,QAAQC,IAAIkG,EAAO9B,SACZ,KACF3D,EADL,CAEEkD,UAAWuC,EAAO9B,UAEtB,IAAK,gBAEH,OADArE,QAAQC,IAAI,iBACL,KACFS,EADL,CAEEkD,UAAW,OAEf,IAAK,kBAEH,OADA5D,QAAQC,IAAI,mBACLS,EACT,IAAK,iBAEH,OADAV,QAAQC,IAAI,kBACL,KACFS,EADL,CAEEkD,UAAW,OAEf,IAAM,eAGN,OAFA5D,QAAQC,IAAI,gBACZD,QAAQC,IAAIkG,EAAO9B,SACZ,KACA3D,EADP,CAEIkD,UAAWuC,EAAO9B,UAGtB,QACE,OAAO3D,ICjCPuF,EAAY,CAChB/D,SAAU,CACN,CAAChC,GAAG,EAAGyB,MAAO,gBAAiBP,QAAU,kNACzC,CAAClB,GAAG,EAAGyB,MAAO,iBAAkBP,QAAU,kNAC1C,CAAClB,GAAG,EAAGyB,MAAO,gBAAiBP,QAAU,oNAehCgF,EAZQ,WAAgC,IAA/B1F,EAA8B,uDAAtBuF,EAAWE,EAAW,uCACpD,OAAQA,EAAOrG,MACb,IAAK,yBAEH,OADAE,QAAQC,IAAI,0BACLS,EACT,IAAK,uBAEH,OADAV,QAAQC,IAAI,wBACLS,EACT,QACE,OAAOA,I,QCFE2F,EARMC,YAAgB,CACjC1G,KAAM2G,EACN7E,QAAS0E,EACT7D,UAAWiE,mBACX7F,SAAU8F,oB,4CCGVC,+bARFC,E,EAAAA,uBACAC,E,EAAAA,2BACAC,E,EAAAA,+BACAC,E,EAAAA,6BACAC,G,EAAAA,wBACAC,G,EAAAA,4BACAC,G,EAAAA,gBAIEC,GAAS,CACXC,OAAO,GAAD,OAAKR,GACXS,WAAW,GAAD,OAAKR,GACfS,YAAY,GAAD,OAAKR,GAChBS,UAAU,GAAD,OAAKR,GACdS,cAAc,GAAD,OAAKR,IAClBS,kBAAkB,GAAD,OAAKR,IACtBS,MAAM,GAAD,OAAKR,KAEZtG,IAAS+G,cAAcR,IACvBvG,IAAS4B,YAAYoF,SAAS,CAAEC,uBAAuB,IAExCjH,SAAf,ECbMkH,GAAQC,YAAYzB,EACxB/D,YACEyF,YAAgBC,IAAMC,kBAAkB,CAACtI,0BAAagF,+BACtDuD,6BAAmBC,GAAU,CAACC,YAAa,QAASC,wBAAwB,EAAMC,mBAAmB,IACrGC,yBAAeJ,MAInBN,GAAMW,oBAAoB3I,MAAK,WAC/B4I,IAASC,OAAO,kBAAC,IAAD,CAAUb,MAAOA,IAAO,kBAAC,EAAD,OAAoBc,SAASC,eAAe,YL0G9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlJ,MAAK,SAAAmJ,GACjCA,EAAaC,kB","file":"static/js/main.c62846d8.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut }  from '../../store/actions/authActions'\n \nconst SignedInLinks = (props) => {\n    console.log(\"props signedinLInks \" + props)\n    return (\n        <>\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n\n                <li><NavLink to=\"/create\">New Project</NavLink></li>\n                <li> <a href=\"/\" onClick={props.signOut}>LogOut</a></li>\n                <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n            </ul>\n        </>\n    );\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\nexport default connect(null, mapDispatchToProps) (SignedInLinks);","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(err => {\n        const { message } = err;\n        dispatch({ type: \"LOGIN_ERROR\", message });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    //create a firebase user\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(resp => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch(err => {\n        console.log(err.message);\n        const { message } = err;\n        dispatch({ type: \"SIGNUP_ERROR\", message });\n      });\n  };\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <>\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                <li><NavLink to=\"/SignUp\">Sign Up</NavLink></li>\n                <li><NavLink to=\"/SignIn\">Log In</NavLink></li>\n            </ul>\n        </>\n    );\n}\n\nexport default SignedOutLinks;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <>\n      <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"nav-wrapper container\">\n          <Link to=\"/\" className=\"brand-logo\">\n            {profile.initials ? `${profile.initials}'s Plan` :  'Planner App'}\n          </Link>\n          {links}\n        </div>\n      </nav>\n    </>\n  );\n};\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import React from \"react\";\nimport moment from 'moment'\n\nconst Notifications = ({ notifications }) => {\n  return (\n    <div className=\"section\">\n      <div className=\"card z-dept-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\"></span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user}{' '}</span>\n                    <span>{' '}{item.content}{' '}</span>\n                    <div className=\"grey-text note-date\">\n                    { moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from 'moment'\n\nconst ProjectSummary = ({ project }) => {\n  if (project) {\n    return (\n      <div className=\"card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text darken-3\">\n          <span className=\"card-title\">{project.title}</span>\n          <p>\n            Posted by {project.authorFirstName} {project.authorLastName}\n          </p>\n          <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n        </div>\n      </div>\n    );\n  } else {\n    return <p>Loading Project ....</p>;\n  }\n};\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummsry from '../projects/ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects }) => {\n    return ( \n        <div className=\"project-list section\">\n      {\n          projects && \n          projects.map(project => {\n             return (\n                <Link to={`/project/${project.id}`}>\n                 <ProjectSummsry project={project} key={project.id}/>\n                 </Link>\n             )\n          })\n      }\n\n      </div>\n     );\n}\n \nexport default ProjectList;","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  state = {};\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col sm12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(\"firestore collections \", state.firestore);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\" },\n    { collection: \"notifications\", limit: 3 , orderBy:['time', 'desc']}\n  ])\n)(Dashboard);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect} from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport moment from 'moment'\n\n\nconst ProjectDetails = ({project}) => {\n   \n    return (\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Project title {project.title}</span>\n                    <p>{project.content}</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                    <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n    return {\n        project: project \n\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects'}\n    ])\n)(ProjectDetails)\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.signIn(this.state);\n  };\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  };\n  render() {\n    const { authError } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <form className=\"white col s12 \" onSubmit={this.handleSubmit}>\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field col s12\">\n              <input\n                type=\"email\"\n                id=\"email\"\n                onChange={this.handleChange}\n                className=\"validate\"\n              />\n              <label htmlFor=\"email\">Email</label>\n            </div>\n            <div className=\"input-field col s12\">\n              <input\n                type=\"password\"\n                id=\"password\"\n                onChange={this.handleChange}\n                className=\"validate\"\n              />\n              <label htmlFor=\"password\">Password</label>\n            </div>\n            <div className=\"input-field col s12\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n              <div className=\"center red-text\">\n                {authError ? <p>{authError}</p> : null}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\n\nimport { signUp} from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        console.log(this.state)\n        this.props.signUp(this.state)\n    }\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <form className=\"white col s12 \" onSubmit={this.handleSubmit}>\n                        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                        <div className=\"input-field col s12\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"email\" id='email' onChange={this.handleChange} className=\"validate\" />\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" id='password' onChange={this.handleChange} className=\"validate\" />\n                        </div>\n                        <div className=\"input-field input-field col s12\">\n                            <label htmlFor=\"firstName\">First Name</label>\n                            <input type=\"text\" id='firstName' onChange={this.handleChange} className=\"validate\"/>\n                        </div>\n                        <div className=\"input-field input-field col s12\">\n                            <label htmlFor=\"lastName\">Last Name</label>\n                            <input type=\"text\" id='lastName' onChange={this.handleChange} className=\"validate\"/>\n                        </div>\n                        <div className=\"input-field col s12\">\n                            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError\n      };\n}\nconst mapDistpatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\nexport default connect(mapStateToProps,mapDistpatchToProps)(SignUp)\n","\n\nexport const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n      // make async call to database\n      const firestore = getFirestore();\n      const profile = getState().firebase.profile\n      const authorID = getState().firebase.auth.uid\n\n      firestore.collection('projects').add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorID,\n        createdAt: new Date()\n      }).then(() => {\n        dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n      }).catch(err => {\n        dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n      });\n    }\n  };","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n            <label htmlFor=\"title\">Project Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            ></textarea>\n            <label htmlFor=\"content\">Project Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\nexport default connect(null, mapDispatchToProps)(CreateProject);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport NavBar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\nclass App extends Component {\n  state = {\n    \n  }\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n        <NavBar />\n        <Switch>\n         <Route path=\"/\" exact component={Dashboard} />\n         <Route path=\"/project/:id\"  component={ProjectDetails} />\n         <Route path=\"/SignIn\" exact component={SignIn}/>\n         <Route path=\"/SignUp\" exact component={SignUp}/>\n         <Route path=\"/Create\" exact component={CreateProject}/>\n\n       \n          \n        </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {};\nconst authRecucer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(action.message);\n      return {\n        ...state,\n        authError: action.message\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"LOGIN_SUCCESS\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"SIGNOUT_SUCCESS\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log('SIGNUP_SUCCESS')\n      return {\n        ...state,\n        authError: null\n      };\n    case  \"SIGNUP_ERROR\":\n    console.log('SIGNUP_ERROR')\n    console.log(action.message)\n    return {\n        ...state,\n        authError: action.message\n    }\n    \n    default:\n      return state;\n  }\n};\n\nexport default authRecucer;\n","const initState = {\n  projects: [\n      {id:1, title: 'first titile ', content:  \"dolor sit amet consectetur adipisicing elit. Fugiat laudantium eius, provident facilis eum pariatur aspernatur voluptatem quam doloremque eligendi aliquam fuga eveniet iste nihil illo vero. Vel, fugiat quod\"},\n      {id:2, title: 'Second titile ', content:  \"dolor sit amet consectetur adipisicing elit. Fugiat laudantium eius, provident facilis eum pariatur aspernatur voluptatem quam doloremque eligendi aliquam fuga eveniet iste nihil illo vero. Vel, fugiat quod\"},\n      {id:3, title: 'Third titile ', content:  \"dolor sit amet consectetur adipisicing elit. Fugiat laudantium eius, provident facilis eum pariatur aspernatur voluptatem quam doloremque eligendi aliquam fuga eveniet iste nihil illo vero. Vel, fugiat quod\"}\n  ]\n}\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT_SUCCESS':\n      console.log('create project success');\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error');\n      return state;\n    default:\n      return state;\n  }\n};\nexport default projectReducer","import autReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers  } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer =  combineReducers({\n    auth: autReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\n\nexport default rootReducer\n\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst {\n  REACT_APP_FIREBASE_KEY,\n  REACT_APP_FIREBASE_AUTHURL,\n  REACT_APP_FIREBASE_DATABASEURL,\n  REACT_APP_FIREBASE_PROJECTID,\n  REACT_APP_STORAGEBUCKET,\n  REACT_APP_MESSAGINGSENDERID,\n  REACT_APP_APPID\n\n} = process.env;\n\nvar config = {\n  apiKey: `${REACT_APP_FIREBASE_KEY}`,\n  authDomain: `${REACT_APP_FIREBASE_AUTHURL}`,\n  databaseURL: `${REACT_APP_FIREBASE_DATABASEURL}`,\n  projectId: `${REACT_APP_FIREBASE_PROJECTID}`,\n  storageBucket: `${REACT_APP_STORAGEBUCKET}`,\n  messagingSenderId: `${REACT_APP_MESSAGINGSENDERID}`,\n  appId: `${REACT_APP_APPID}`\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}